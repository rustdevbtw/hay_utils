.\" generated with Ronn-NG/v0.10.1
.\" http://github.com/apjanke/ronn-ng/tree/0.10.1
.TH "HAY_UTILS\.H" "3" "August 2024" "Hay Foundation" "hay/utils.h"
.SH "NAME"
\fBhay_utils\.h\fR \- utility functions for Hay projects
.SH "SYNOPSIS"
\fBuintmax_t hay_utils_stou(char *s);\fR
.br
\fBintmax_t hay_utils_stoi(char *s);\fR
.br
\fBint hay_utils_itos(int n, char *s);\fR
.SH "DESCRIPTION"
\fBhay_utils\fR is an utility library used by and for various projects of the \fBHay Suite\fR\.
.br
A \fBHay Suite\fR project\.
.SS "hay_utils_stou"
Converts a string to an unsigned integer\.
.SS "hay_utils_stoi"
Converts a string to a signed integer\.
.SS "hay_utils_itos"
Converts an integer to a string\.
.SH "PARAMETERS"
.SS "hay_utils_stou"
.IP "\(bu" 4
\fB\fBs\fR\fR: A pointer to a string containing the representation of an unsigned integer\. The string should consist of digits and optionally include leading whitespace\. If the string is \fBNULL\fR, the function sets \fBerrno\fR to \fBEINVAL\fR and returns \fB0\fR\.
.IP "" 0
.SS "hay_utils_stoi"
.IP "\(bu" 4
\fB\fBs\fR\fR: A pointer to a string containing the representation of a signed integer\. The string can include leading whitespace, an optional sign (\fB+\fR or \fB\-\fR), and digits\. If the string is \fBNULL\fR, the function sets \fBerrno\fR to \fBEINVAL\fR and returns \fB0\fR\.
.IP "" 0
.SS "hay_utils_itos"
.IP "\(bu" 4
\fB\fBn\fR\fR: The integer to convert to a string\.
.IP "\(bu" 4
\fB\fBs\fR\fR: A pointer to a buffer where the resulting string will be stored\. The buffer should be large enough to hold the string representation of the integer\. If the buffer is \fBNULL\fR, the function sets \fBerrno\fR to \fBEINVAL\fR and returns \fB\-1\fR\.
.IP "" 0
.SH "RETURN VALUE"
.SS "hay_utils_stou"
Returns the converted unsigned integer\. If the input string is invalid or \fBNULL\fR, the function sets \fBerrno\fR to \fBEINVAL\fR and returns \fB0\fR\.
.SS "hay_utils_stoi"
Returns the converted signed integer\. If the input string is invalid or \fBNULL\fR, the function sets \fBerrno\fR to \fBEINVAL\fR and returns \fB0\fR\.
.SS "hay_utils_itos"
Returns the length of the resulting string\. If the buffer is \fBNULL\fR or too small to hold the integer, the function sets \fBerrno\fR to \fBEINVAL\fR and returns \fB\-1\fR\.
.SH "ERRORS"
.IP "\(bu" 4
\fB\fBEINVAL\fR\fR: This error code is set if the input string is \fBNULL\fR, contains invalid characters, or if the buffer is \fBNULL\fR in the \fBhay_utils_itos\fR function\. It indicates that an invalid argument was provided\.
.IP "\(bu" 4
\fB\fBENOMEM\fR\fR: Not applicable to these functions as they do not perform dynamic memory allocation\.
.IP "" 0
.SH "FUNCTIONS"
.SS "hay_utils_stou()"
.nf
uintmax_t hay_utils_stou(char *s);
.fi
.P
Converts the string \fBs\fR to an unsigned integer\. Handles non\-digit characters by setting \fBerrno\fR to \fBEINVAL\fR if encountered\.
.SS "hay_utils_stoi()"
.nf
intmax_t hay_utils_stoi(char *s);
.fi
.P
Converts the string \fBs\fR to a signed integer\. Handles optional sign characters and non\-digit characters by setting \fBerrno\fR to \fBEINVAL\fR if invalid input is detected\.
.SS "hay_utils_itos()"
.nf
int hay_utils_itos(int n, char *s);
.fi
.P
Converts the integer \fBn\fR to a string and stores it in the buffer pointed to by \fBs\fR\. Returns the length of the string\. If \fBs\fR is \fBNULL\fR, sets \fBerrno\fR to \fBEINVAL\fR and returns \fB\-1\fR\.
.SH "EXAMPLES"
The following examples demonstrate how to use the \fBhay_utils_stou\fR, \fBhay_utils_stoi\fR, and \fBhay_utils_itos\fR functions:
.SS "Example 1: Using hay_utils_stou and hay_utils_stoi"
.nf
#include <hay/utils\.h>
#include <stdio\.h>
#include <stdlib\.h>
#include <errno\.h>

int main() {
    char num_str[] = "12345";
    uintmax_t u_val = hay_utils_stou(num_str);
    intmax_t s_val = hay_utils_stoi(num_str);

    if (errno) {
        perror("Conversion error");
        return EXIT_FAILURE;
    }

    printf("Unsigned value: %ju\en", u_val);
    printf("Signed value: %jd\en", s_val);

    return EXIT_SUCCESS;
}
.fi
.SS "Example 2: Using hay_utils_itos"
.nf
#include <hay/utils\.h>
#include <stdio\.h>
#include <stdlib\.h>

int main() {
    int num = 12345;
    char buffer[20]; // Sufficiently large buffer
    int length = hay_utils_itos(num, buffer);

    if (length == \-1) {
        perror("Conversion error");
        return EXIT_FAILURE;
    }

    printf("String representation: %s\en", buffer);

    return EXIT_SUCCESS;
}
.fi
.P
In these examples:
.IP "1." 4
\fBhay_utils_stou\fR and \fBhay_utils_stoi\fR convert string representations of numbers to \fBuintmax_t\fR and \fBintmax_t\fR respectively\.
.IP "2." 4
\fBhay_utils_itos\fR converts an integer to its string representation and stores it in the provided buffer\.
.IP "" 0
.SH "SEE ALSO"
errno(3), strerror(3), sprintf(3)
.SH "AUTHOR"
Written by Hay Foundation\. Contributions and feedback can be directed to \fInobody@rajdeepm\.xyz\fR\.
.SH "COPYRIGHT"
This manpage is released under the \fBMozilla Public License, version 2\.0\fR License\.
